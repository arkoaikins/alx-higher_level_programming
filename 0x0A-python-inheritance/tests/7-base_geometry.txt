#This is a series of tests that is required for
testing your codes to see if it works on all possible edge cases
================================================================



 7-base_geometry module
===============================

This test check the class BaseGeometry which is in the file
7-base_geometry.py,on all the possibe cases.



case 0-2:
    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
    >>> area = __import__("7-base_geometry").BaseGeometry.area
    >>> integer_validator = __import__("7-base_geometry").BaseGeometry.integer_validator



case 3-4
    >>> bg = BaseGeometry()
    >>> print(bg.area())
    Traceback (most recent call last):
    Exception: area() is not implemented

    

case 5-6
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", "one")
    Traceback (most recent call last):
    TypeError: my_int must be an integer


case 7-8
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0


case 9-10
    >>> bg = BaseGeometry()
    >>> print(bg.area) # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
    <bound method BaseGeometry.area of <7-base_geometry.BaseGeometry 
     object at...>>

   

case 11
    >>> bg.integer_validator("number", -1)
    Traceback (most recent call last):
    ValueError: number must be greater than 0
